{"version":3,"sources":["components/list-item/list-item.js","components/list/list.js","components/modal/modal.js","components/input-box/input-box.js","components/button/button.js","components/add-todo/add-todo.js","components/todo-list/todo-list.js","App.js","index.js"],"names":["ListItem","id","todo","completed","editClick","completeClick","removeClick","className","data-id","onClick","List","list","edit","remove","complete","map","ele","key","TodoModal","children","clicked","InputBox","props","Button","otherProps","AddTodo","handleChange","type","placeholder","name","onChange","value","TodoList","toggleModal","setState","prevState","todoModal","editID","addTodo","event","target","handleAddTodo","updatedTodoList","console","log","state","todoList","item","updatedTodo","lastID","searchTodo","handleEditTodo","element","closest","getAttribute","editTodo","filter","handleCompleteClick","handleRemoveTodo","this","toLowerCase","includes","length","React","Component","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d9df016.chunk.js","sourcesContent":["import React from 'react';\r\nimport './list-item.scss';\r\nimport EditOutlinedIcon from '@material-ui/icons/EditOutlined';\r\nimport DoneOutlineOutlinedIcon from '@material-ui/icons/DoneOutlineOutlined';\r\nimport DeleteOutlinedIcon from '@material-ui/icons/DeleteOutlined';\r\n\r\nconst ListItem = ({id, todo, completed, editClick, completeClick, removeClick}) => (\r\n    <div className=\"list-item\">\r\n        <p>{completed ? <del>{todo}</del>: todo}</p>\r\n        <div className=\"list-action\">\r\n            {\r\n                !completed ?\r\n                    <EditOutlinedIcon className=\"edit-todo\" data-id={id} onClick={editClick} />\r\n                :\r\n                    null\r\n            }\r\n            \r\n            <DoneOutlineOutlinedIcon className={completed ? \"todo-complete done-todo\" : \"done-todo\"} data-id={id} onClick={completeClick} />\r\n            <DeleteOutlinedIcon className=\"delete-todo\" data-id={id}  onClick={removeClick} />\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport ListItem from '../list-item/list-item';\r\nimport './list.scss';\r\n\r\nconst List = ({list, edit, remove, complete}) => {\r\n    return (\r\n        <div className=\"list\">\r\n            {\r\n                list.map((ele => <ListItem key={ele.id} {...ele} editClick={edit} removeClick={remove} completeClick={complete} />))\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default List;","import React from 'react';\r\nimport './modal.scss';\r\n\r\nconst TodoModal = ({children, clicked }) => (\r\n    <div className=\"todo-modal\">\r\n        <div className=\"todo-modal-content\">\r\n            <span className=\"close\" onClick={clicked}>&times;</span>\r\n           {children}\r\n        </div>\r\n    </div>\r\n)\r\n\r\nexport default TodoModal;","import React from 'react';\r\nimport './input-box.scss';\r\n\r\nconst InputBox = (props) => (\r\n    <input className=\"input-box\" {...props} />\r\n)\r\n\r\nexport default InputBox","import React from 'react';\r\nimport './button.scss';\r\n\r\nconst Button = ({ children, ...otherProps }) => (\r\n    <button className=\"button\" {...otherProps}>\r\n        {children}\r\n    </button>\r\n)\r\n\r\nexport default Button;","import React from 'react';\r\nimport './add-todo.scss';\r\n\r\nimport InputBox from '../input-box/input-box';\r\nimport Button from '../button/button';\r\n\r\nconst AddTodo = ({ handleChange, todo, clicked }) => (\r\n    <div className=\"add-todo\">\r\n        <h1 className=\"title\">Add Todo</h1>\r\n        <div className=\"add-input-container\">\r\n            <InputBox type=\"text\" placeholder=\"Add Todo\" name=\"addTodo\" onChange={handleChange} value={todo} />\r\n        </div>\r\n        <Button onClick={clicked}>Add</Button>\r\n    </div>\r\n)\r\n\r\nexport default AddTodo;","import React from 'react';\r\nimport './todo-list.scss';\r\nimport AddCircleOutlineRoundedIcon from '@material-ui/icons/AddCircleOutlineRounded';\r\nimport List from '../list/list';\r\nimport TodoModal from '../modal/modal';\r\nimport AddTodo from '../add-todo/add-todo';\r\nimport InputBox from '../input-box/input-box';\r\n\r\nclass TodoList extends React.Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            lastID: 0,\r\n            addTodo: '',\r\n            searchTodo: '',\r\n            todoModal: false,\r\n            todoList: [\r\n                {\r\n                    id: 11,\r\n                    todo: \"Eat Healthy\",\r\n                    completed: false\r\n                },\r\n                {\r\n                    id: 12,\r\n                    todo: \"Sleep Healthy\",\r\n                    completed: false\r\n                }\r\n            ],\r\n        }\r\n    }\r\n\r\n    toggleModal = () => {\r\n        this.setState((prevState) => ({\r\n            todoModal: !prevState.todoModal,\r\n            editID: '',\r\n            addTodo: '',\r\n        }))\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        const { name, value } = event.target;\r\n        this.setState({ [name]: value });\r\n    }\r\n\r\n    handleAddTodo = () => {\r\n        let updatedTodoList;\r\n        console.log(this.state.editID)\r\n        if(+this.state.editID) {\r\n            updatedTodoList = this.state.todoList.map(item => {\r\n                console.log(item.id)\r\n                if(item.id === +this.state.editID) {\r\n                    item.todo = this.state.addTodo;\r\n                }\r\n                return item;\r\n            })\r\n        } else {\r\n            const updatedTodo = {\r\n                id: this.state.lastID + 1,\r\n                todo: this.state.addTodo,\r\n                completed: false\r\n            }\r\n            updatedTodoList = [updatedTodo, ...this.state.todoList];\r\n        }\r\n\r\n        this.setState(prevState => ({\r\n            lastID: prevState.lastID + 1,\r\n            addTodo: '',\r\n            searchTodo: '',\r\n            todoModal: !prevState.todoModal,\r\n            todoList: [...updatedTodoList],\r\n            editID: ''\r\n        }))\r\n    }\r\n\r\n    handleEditTodo = (event) => {\r\n        const element = event.target.closest('svg');\r\n        if(element) {\r\n            const id = element.getAttribute('data-id');\r\n            const editTodo = this.state.todoList.filter(ele => ele.id === +id)[0];\r\n            this.setState({\r\n                todoModal: true,\r\n                addTodo: editTodo.todo,\r\n                editID: id\r\n            })\r\n        }\r\n    }\r\n\r\n    handleCompleteClick = (event) => {\r\n        const element = event.target.closest('svg');\r\n        if(element) {\r\n            const id = +element.getAttribute('data-id');\r\n\r\n            const updatedTodo = this.state.todoList.map(item => {\r\n                if(item.id === id) {\r\n                    item.completed = !item.completed;\r\n                }\r\n                return item;\r\n            });\r\n\r\n            this.setState({\r\n                todoList: updatedTodo\r\n            });\r\n        }\r\n    }\r\n    \r\n    handleRemoveTodo = (event) => {\r\n        const element = event.target.closest('svg');\r\n        if(element) {\r\n            const id = +element.getAttribute('data-id');\r\n            const updatedTodo = this.state.todoList.filter(item => item.id !== id);\r\n            this.setState({\r\n                todoList: updatedTodo\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const updatedTodoList = this.state.todoList.filter( ele => ele.todo.toLowerCase().includes(this.state.searchTodo.toLowerCase()));\r\n        return (\r\n            <div className=\"todo-wrapper\">\r\n                <div className=\"todo-list\">\r\n                    <h1 className=\"title\">Todo List</h1>\r\n                    <div className=\"search-container\">\r\n                        <InputBox type=\"search\" placeholder=\"Search Todo\" name=\"searchTodo\" value={this.state.searchTodo} onChange={this.handleChange} />\r\n                    </div>\r\n                    <AddCircleOutlineRoundedIcon className='add-todo' onClick={this.toggleModal} />\r\n                    {updatedTodoList.length ? <List list={updatedTodoList} edit={this.handleEditTodo} remove={this.handleRemoveTodo} complete={this.handleCompleteClick} /> : null}\r\n                </div>\r\n                { this.state.todoModal ? \r\n                    <TodoModal clicked={this.toggleModal}>\r\n                        <AddTodo clicked={this.handleAddTodo} todo={this.state.addTodo} handleChange={this.handleChange} />\r\n                    </TodoModal> :\r\n                    null\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TodoList","import React from 'react';\nimport './App.css';\n\nimport TodoList from './components/todo-list/todo-list';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}